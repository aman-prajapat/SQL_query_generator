,user_query,sql_query
0,Get all customer details.,SELECT * FROM customers;
1,Retrieve all employees from the database.,SELECT * FROM employees;
2,Show all products available in the inventory.,SELECT * FROM products WHERE quantity > 0;
3,List all orders placed today.,SELECT *  FROM orders  WHERE order_date = CURRENT_DATE;
4,Find all students enrolled in the school.,SELECT * FROM students;
5,Find all employees who work in the IT department.,SELECT * FROM Employees WHERE Department = 'IT';
6,Show all customers from New York.,SELECT * FROM customers WHERE city = 'New York';
7,Get a list of students who scored above 90% in Math.,SELECT *  FROM students  WHERE math_score > 90;
8,Retrieve all transactions greater than $500.,SELECT * FROM transactions WHERE amount > 500;
9,Find orders placed between January and March 2024.,SELECT *  FROM orders  WHERE order_date >= '2024-01-01'  AND order_date <= '2024-03-31';
10,Show the top 10 highest-paid employees.,SELECT * FROM employees ORDER BY salary DESC LIMIT 10;
11,List products sorted by their price in descending order.,SELECT * FROM products ORDER BY price DESC;
12,Get the latest 5 orders placed by customers.,SELECT *  FROM orders  ORDER BY order_date DESC  LIMIT 5;
13,Show employees sorted alphabetically by their last name.,SELECT *  FROM employees  ORDER BY last_name ASC;
14,Display students sorted by their total marks.,SELECT *  FROM students  ORDER BY total_marks DESC;
15,Count the number of employees in each department.,"SELECT department, COUNT(*)  FROM employees  GROUP BY department;"
16,Find the total number of registered users.,SELECT COUNT(*) AS total_users FROM users;
17,Get the number of products available in stock.,SELECT COUNT(*) AS num_products  FROM products  WHERE quantity > 0;
18,Count how many orders were placed in the last 7 days.,SELECT COUNT(*)  FROM orders  WHERE order_date >= NOW() - INTERVAL '7 day';
19,Find the number of complaints received this month.,SELECT COUNT(*)  FROM complaints  WHERE EXTRACT(MONTH FROM complaint_date) = EXTRACT(MONTH FROM CURRENT_DATE)  AND EXTRACT(YEAR FROM complaint_date) = EXTRACT(YEAR FROM CURRENT_DATE);
20,Get the total revenue generated by each product category.,"SELECT      pc.category_name,      SUM(oi.unit_price * oi.quantity) AS total_revenue FROM      order_items oi JOIN      products p ON oi.product_id = p.product_id JOIN      product_categories pc ON p.category_id = pc.category_id GROUP BY      pc.category_name ORDER BY      total_revenue DESC;"
21,Count the number of students in each grade.,"SELECT grade, COUNT(*)  FROM students  GROUP BY grade;"
22,Find the number of orders placed by each customer.,"SELECT customer_id, COUNT(order_id) AS number_of_orders  FROM orders  GROUP BY customer_id;"
23,Show the total sales per region.,"SELECT      region,      SUM(sales) AS total_sales FROM      sales_table GROUP BY      region;"
24,Display the number of employees in each job position.,"SELECT      job_title,      COUNT(employee_id) AS number_of_employees FROM      employees GROUP BY      job_title;"
25,Get the names of customers along with their order details.,"SELECT c.CustomerName, o.OrderID, o.OrderDate, o.TotalAmount FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID;"
26,Retrieve employee names and their respective department names.,"SELECT e.employee_name, d.department_name  FROM employees e  JOIN departments d ON e.department_id = d.department_id;"
27,Show student names along with their course details.,"SELECT s.student_name, c.course_name, c.course_code FROM students s JOIN student_courses sc ON s.student_id = sc.student_id JOIN courses c ON sc.course_id = c.course_id;"
28,List all orders with their corresponding payment details.,"SELECT o.order_id, o.order_date, p.payment_id, p.payment_method, p.payment_date FROM orders o JOIN payments p ON o.order_id = p.order_id;"
29,Find all authors and their published books.,"SELECT a.author_name, b.book_name  FROM authors a  JOIN books b ON a.author_id = b.author_id;"
30,Find all users who registered in the last 30 days.,SELECT *  FROM users  WHERE registration_date >= NOW() - INTERVAL '30 day';
31,Show orders placed in the last week.,SELECT *  FROM orders  WHERE order_date > NOW() - INTERVAL '7 day';
32,Get the attendance records for the current month.,SELECT *  FROM attendance  WHERE MONTH(date) = MONTH(CURRENT_DATE)  AND YEAR(date) = YEAR(CURRENT_DATE);
33,List transactions that happened yesterday.,SELECT *  FROM transactions  WHERE DATE(transaction_date) = DATE(NOW() - INTERVAL 1 DAY);
34,Find employees who joined the company in 2023.,SELECT *  FROM employees  WHERE EXTRACT(YEAR FROM hire_date) = 2023;
35,Find all products with 'phone' in their name.,SELECT *  FROM products  WHERE name LIKE '%phone%';
36,Get a list of customers whose names start with 'A'.,SELECT *  FROM customers  WHERE name LIKE 'A%';
37,Search for books with 'Data Science' in the title.,SELECT * FROM books WHERE title LIKE '%Data Science%';
38,Retrieve employee emails that contain 'company.com'.,SELECT email  FROM employees  WHERE email LIKE '%company.com%';
39,Show orders with special instructions containing 'fragile'.,SELECT * FROM orders  WHERE special_instructions LIKE '%fragile%';
40,Get all orders with an amount between $1000 and $5000.,SELECT *  FROM orders  WHERE amount BETWEEN 1000 AND 5000;
41,Find students who scored between 75 and 90 marks.,SELECT * FROM students WHERE marks BETWEEN 75 AND 90;
42,"Show employees whose salaries are between $50,000 and $80,000.",SELECT *  FROM Employees  WHERE Salary BETWEEN 50000 AND 80000;
43,Retrieve sales data for the period 2020 to 2023.,SELECT *  FROM sales  WHERE sale_date BETWEEN '2020-01-01' AND '2023-12-31';
44,Find all customers aged between 25 and 40.,SELECT * FROM customers WHERE age BETWEEN 25 AND 40;
45,Update the salary of employees in the IT department by 10%.,UPDATE employees  SET salary = salary * 1.10  WHERE department = 'IT';
46,Mark all orders shipped if the delivery date is passed.,UPDATE orders  SET status = 'shipped'  WHERE delivery_date < CURRENT_DATE;
47,Change the status of inactive users to ‘suspended’.,UPDATE users SET status = 'suspended' WHERE status = 'inactive';
48,Update all product prices with a 5% discount.,UPDATE products SET price = price * 0.95;
49,Set all students’ grades to 'Pass' if their marks are above 40.,UPDATE students  SET grade = 'Pass'  WHERE marks > 40;
50,Delete all inactive users who haven’t logged in for a year.,DELETE FROM users  WHERE last_login < NOW() - INTERVAL 1 YEAR AND is_active = FALSE;
51,Remove employees who resigned last year.,"DELETE FROM employees  WHERE resignation_date BETWEEN DATE_TRUNC('year', CURRENT_DATE) - INTERVAL '1 year'  AND DATE_TRUNC('year', CURRENT_DATE);"
52,Delete all expired promotional coupons.,DELETE FROM promotional_coupons  WHERE expiration_date < CURRENT_DATE;
53,Remove products that are out of stock for more than 6 months.,DELETE FROM products  WHERE stock_quantity = 0 AND last_stock_update < NOW() - INTERVAL 6 MONTH;
54,Delete all spam comments from the database.,DELETE FROM comments WHERE comment_type = 'spam';
